# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  release:
    # Only use the types keyword to narrow down the activity types that will trigger your workflow.
    # types: [published, created, edited]
    types: [published]

# on: push

jobs:

#------------ deploy prod ------------
  # build-prod:
  #   runs-on: ubuntu-latest
  #   if: startsWith( github.ref, 'refs/tags/releases-prod/')
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions/setup-node@v2
  #       with:
  #         node-version: '14'
  #     - name: init node_module
  #       run: npm install
  #     - name: run test
  #       run: npm test
  #     - name: print
  #       run: echo "prod"

  deploy-prod: 
    runs-on: ubuntu-latest
    if: startsWith( github.ref, 'refs/tags/releases-klaytn-prod/')
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_PROD }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_PROD }}
          aws-region: ap-southeast-1

      - name: yarn install
        run: yarn
      
      - name: build production
        run: yarn build:production

      - name: aws sync s3
        run: aws s3 sync ./build s3://klaytn-farm-pool-definix-web --acl public-read
      
      - name: deploy aws cloudfront
        run: aws cloudfront create-invalidation --distribution-id EV3O5EYBNK1H4 --paths '/*'
      
      - name: print
        run: echo "deploy PROD"

#------------ deploy staging ------------
  deploy-staging: 
    runs-on: ubuntu-latest
    if: startsWith( github.ref, 'refs/tags/releases-klaytn-staging/')
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_PROD }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_PROD }}
          aws-region: ap-southeast-1

      - name: yarn install
        run: yarn
      
      - name: build staging
        run: yarn build:staging

      - name: aws sync s3
        run: aws s3 sync ./build s3://staging-klaytn-farm-pool-definix-web --acl public-read
      
      - name: deploy aws cloudfront
        run: aws cloudfront create-invalidation --distribution-id E1789L6PYB2WDN --paths '/*'
      
      - name: print
        run: echo "deploy STAGING test"

#------------ deploy develop ------------

  deploy-develop: 
    # needs: build-develop
    runs-on: ubuntu-latest
    if: startsWith( github.ref, 'refs/tags/releases-klaytn-develop/')
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_DEVELOP }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_DEVELOP }}
          aws-region: ap-southeast-1

      - name: yarn install
        run: yarn
      
      - name: build development
        run: yarn build:development

      - name: aws sync s3
        run: aws s3 sync ./build s3://dev-farm-pool-klaytn-definix-web --acl public-read
      
      - name: deploy aws cloudfront
        run: aws cloudfront create-invalidation --distribution-id EG4ZV6V4ZWEA2 --paths '/*'
      
      - name: print
        run: echo "deploy develop test"

  # publish:
  #   needs: test
  #   if: startsWith(github.ref, 'refs/tags/v')

    #  tags: releases/[1-9]+.[0-9]+.[0-9]+
        # if: github.ref == 'refs/heads/master'
#
   # if: startsWith( github.ref, 'refs/tags/releases/')
#